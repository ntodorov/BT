#BlueJ class context
comment0.target=BinaryTree
comment0.text=\n\ BinaryTree\ partially\ implements\ a\ binary\ tree.\n\ NOTE\ -\ you\ will\ need\ to\ fill\ in\ parts\ of\ this\ tree.\ All\ the\ methods\ that\ you\ need\ to\ fill\ in\ are\ \n\ at\ the\ bottom\n
comment1.params=
comment1.target=BinaryTree()
comment1.text=\n\ Creates\ an\ empty\ binary\ tree.\n
comment10.params=
comment10.target=BinaryTree\ getRight()
comment10.text=\n\ Returns\ the\ right\ subtree\ of\ the\ root\ of\ this\ tree.\n\ \n\ @return\ the\ right\ subtree\ of\ the\ root\ of\ this\ tree.\n\ @throws\ RuntimeException\ if\ the\ tree\ is\ empty\n
comment11.params=
comment11.target=int\ size()
comment11.text=\n\ Returns\ the\ number\ of\ elements\ in\ this\ binary\ tree.\n\ \n\ @return\ the\ number\ of\ elements\ in\ this\ binary\ tree\n
comment12.params=
comment12.target=boolean\ isEmpty()
comment12.text=\n\ Determines\ if\ tree\ contains\ any\ nodes\n\ \n\ @return\ true\ if\ no\ nodes\ in\ tree,\ else\ false\n
comment13.params=
comment13.target=boolean\ isLeaf()
comment13.text=\n\ Determines\ if\ tree\ is\ simply\ a\ leaf\n\ \n\ @return\ true\ if\ no\ nodes\ in\ tree,\ else\ false\n
comment14.params=
comment14.target=java.util.Iterator\ inorder()
comment2.params=element
comment2.target=BinaryTree(java.lang.Object)
comment2.text=\n\ Creates\ a\ binary\ tree\ with\ the\ specified\ element\ as\ its\ root.\n\ @param\ element\ the\ object\ to\ store\ in\ the\ root\ node\n
comment3.params=element\ left\ right
comment3.target=BinaryTree(java.lang.Object,\ BinaryTree,\ BinaryTree)
comment3.text=\n\ Creates\ a\ binary\ tree\ with\ the\ two\ specified\ subtrees.\n\ @param\ element\ the\ object\ to\ store\ in\ the\ root\ node\n\ @param\ left\ the\ left\ subtree\ that\ should\ come\ off\ the\ root\ node\n\ @param\ right\ the\ right\ subtree\ that\ should\ come\ off\ the\ root\ node\n
comment4.params=
comment4.target=java.lang.Object\ getRootElement()
comment4.text=\n\ Returns\ the\ element\ stored\ in\ the\ root\ of\ the\ tree.\n\ \n\ @return\ the\ element\ stored\ in\ the\ root\ of\ the\ tree\n\ @throws\ RuntimeException\ if\ the\ tree\ is\ empty\n
comment5.params=value
comment5.target=void\ setRootElement(java.lang.Object)
comment5.text=\n\ Sets\ the\ element\ stored\ in\ the\ root\ of\ the\ tree.\n\ \n\ @param\ value\ the\ object\ to\ store\ in\ the\ root\n\ @throws\ RuntimeException\ if\ the\ tree\ is\ empty\n
comment6.params=newLeft
comment6.target=void\ setLeft(BinaryTree)
comment6.text=\n\ Sets\ left\ subtree\ of\ the\ root\ of\ the\ tree.\n\ \n\ @param\ newLeft\ the\ tree\ which\ is\ to\ become\ the\ left\ subtree\ of\ the\ root\n\ @throws\ RuntimeException\ if\ the\ tree\ is\ empty\n
comment7.params=newRight
comment7.target=void\ setRight(BinaryTree)
comment7.text=\n\ Sets\ the\ right\ subtree\ of\ the\ root\ of\ the\ tree.\n\ \n\ @param\ newRight\ the\ tree\ which\ is\ to\ become\ the\ right\ subtree\ of\ the\ root\n\ @throws\ RuntimeException\ if\ the\ tree\ is\ empty\n
comment8.params=
comment8.target=java.util.Iterator\ iterator()
comment8.text=\n\ Satisfies\ the\ Iterable\ interface\ using\ an\ inorder\ traversal.\n\ \n
comment9.params=
comment9.target=BinaryTree\ getLeft()
comment9.text=\n\ Returns\ the\ left\ subtree\ of\ the\ root\ of\ this\ tree.\n\ \n\ @return\ the\ left\ subtree\ of\ the\ root\ of\ this\ tree.\n\ @throws\ RuntimeException\ if\ the\ tree\ is\ empty\n
numComments=15
